name: CI/CD treeHealthDetection

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.10"]
        os: [ubuntu-latest, ubuntu-20.04, macOS-latest]
        venv_activate: ["source pyenv_base/bin/activate"]
        
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m venv pyenv_base
        ${{ matrix.venv_activate }}
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        python -m pip install . --upgrade
    - name: Lint with flake8
      run: |
        ${{ matrix.venv_activate }}
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./neonwranglerpy --count --show-source --statistics
        yapf -d --recursive ./neonwranglerpy --style=.style.yapf 2>&1
    - name: Test with pytest
      run: |
        ${{ matrix.venv_activate }}
        pytest -v -k "not (test_retrieve_vst_dat or test_load_by_product)" --cov=./neonwranglerpy --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      if: matrix.os == 'ubuntu-20.04' && matrix.python-version == '3.8' && matrix.r-version == 'release'
      env:
        OS: ${{ runner.os }}
        PYTHON: ${{ matrix.python-version }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
